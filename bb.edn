{:deps {amiorin/dotfiles-v3 {:local/root "."}}
 :tasks
 {:requires ([dotfiles :as dotfiles]
             [clojure.string :as str])
  :init (defn run-steps [first-step]
          (-> [first-step]
              (into *command-line-args*)
              (->> (str/join " "))
              (dotfiles/run-steps {:big-config/env :shell})))
  render {:doc "render the dotfiles without installing them"
          :task (apply dotfiles/core :render *command-line-args*)}
  diff {:doc "render the dotfiles and diff them with the target"
        :task (apply dotfiles/core :diff *command-line-args*)}
  install {:doc "render the dotfiles and install them"
           :task (apply dotfiles/core :install *command-line-args*)}
  tidy {:doc "tidy clojure files"
        :task (do (shell "clojure-lsp clean-ns")
                  (shell "clojure-lsp format"))}
  test {:doc "run test with clojure"
        :task (apply clojure "-X:test" *command-line-args*)}
  test:bb {:doc "run test with babashka"
           :extra-paths ["test"]
           :extra-deps {io.github.cognitect-labs/test-runner
                        {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
           :task (exec 'cognitect.test-runner.api/test)
           :exec-args {:dirs ["test"]}
           :org.babashka/cli {:coerce {:nses [:symbol]
                                       :vars [:symbol]}}}}}
